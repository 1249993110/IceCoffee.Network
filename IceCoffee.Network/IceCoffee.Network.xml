<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IceCoffee.Network</name>
    </assembly>
    <members>
        <member name="P:IceCoffee.Network.CatchException.CatchExceptionAttribute.ErrorMessage">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="P:IceCoffee.Network.CatchException.CatchExceptionAttribute.CustomExceptionType">
            <summary>
            异常类型
            </summary>
        </member>
        <member name="T:IceCoffee.Network.CatchException.ExceptionCaughtEventHandler">
            <summary>
            异常捕获事件处理器
            </summary>
            <param name="sender"></param>
            <param name="ex"></param>
        </member>
        <member name="M:IceCoffee.Network.CatchException.IExceptionCaught.EmitSignal(System.Object,IceCoffee.Network.CatchException.NetworkException)">
            <summary>
            发射异常捕获信号
            </summary>
            <param name="sender"></param>
            <param name="ex"></param>
        </member>
        <member name="T:IceCoffee.Network.CatchException.NetworkException">
            <summary>
            网络异常
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.ReadBuffer">
            <summary>
            内部读取缓冲区
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.SocketDispatcher">
            <summary>
            套接字调度者
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.SessionID">
            <summary>
            会话ID，Socket的操作系统句柄
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.ConnectTime">
            <summary>
            会话连接时间
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.RemoteIPEndPoint">
            <summary>
            远程IP终结点
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.KeepAlive">
            <summary>
            Keep-Alive，必须在会话开始前设置（在Initialize中实例化，可在OnInitialized中初始化）
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.BaseSession`1.LastCommunicateTime">
            <summary>
            上次通讯时间
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.BaseSession`1.SessionInitialized">
            <summary>
            会话初始化，OnSessionInitialized 引发 SessionInitialized 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.BaseSession`1.ReceivedData">
            <summary>
            收到数据，OnReceivedData 引发 ReceivedData 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.BaseSession`1.SessionStarted">
            <summary>
            会话开始，OnSessionStarted 引发 SessionStarted 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.BaseSession`1.SessionClosed">
            <summary>
            会话关闭，OnSessionClosed 引发 SessionClosed 事件。
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.OnInitialized">
            <summary>
            会话初始化后调用，会话池中的每个会话只会被初始化一次，而客户端会话会在每次重新连接时重新创建
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.OnReceived">
            <summary>
            收到数据时调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.OnStarted">
            <summary>
            会话开始后调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.OnClosed(System.Net.Sockets.SocketError)">
            <summary>
            会话关闭后调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.Send(System.Byte[])">
            <summary>
            发送数据
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.Close">
            <summary>
            关闭会话
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.Attach(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            为会话附加信息
            </summary>
            <param name="socket"></param>
            <param name="sessionID"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.Detach(System.Net.Sockets.SocketError)">
            <summary>
            清楚会话附加信息
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.BaseSession`1.Initialize(IceCoffee.Network.Sockets.Primitives.ISocketDispatcher,IceCoffee.Network.Sockets.InternalSendDataEventHandler{`0},System.Func{System.Net.Sockets.SocketAsyncEventArgs,System.Boolean})">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.CustomSession`1.SendHeartbeat">
            <summary>
            发送一个new object()
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.ConnectedEventHandler">
            <summary>
            连接成功事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.DisconnectedEventHandler">
            <summary>
            失去连接事件处理器
            </summary>
            <param name="closeReason"></param>
        </member>
        <member name="T:IceCoffee.Network.Sockets.AutoReconnectDefeatedEventHandler">
            <summary>
            自动重连失败事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.ConnectionStateChangedEventHandler">
            <summary>
            连接状态改变事件处理器
            </summary>
            <param name="connectionState"></param>
        </member>
        <member name="T:IceCoffee.Network.Sockets.StartedEventHandler">
            <summary>
            服务端启动事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.StoppedEventHandler">
            <summary>
            服务端停止事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.NewSessionSetupEventHandler`1">
            <summary>
            新会话建立事件处理器
            </summary>
            <typeparam name="TSession"></typeparam>
            <param name="session"></param>
        </member>
        <member name="T:IceCoffee.Network.Sockets.SessionClosedEventHandler`1">
            <summary>
            会话关闭事件处理器
            </summary>
            <typeparam name="TSession"></typeparam>
            <param name="session"></param>
            <param name="closedReason"></param>
        </member>
        <member name="T:IceCoffee.Network.Sockets.InternalSendDataEventHandler`1">
            <summary>
            内部数据发送事件处理器
            </summary>
            <typeparam name="TSession"></typeparam>
            <param name="session"></param>
            <param name="data"></param>
        </member>
        <member name="T:IceCoffee.Network.Sockets.InternalReceivedEventHandler">
            <summary>
            内部数据接收事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.InitializedEventHandler">
            <summary>
            初始化事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.ReceivedDataEventHandler`1">
            <summary>
            收到数据事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.SessionStartedEventHandler">
            <summary>
            会话开始事件处理器
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.ClosedEventHandler">
            <summary>
            会话关闭事件处理器
            </summary>
            <param name="closedReason"></param>
        </member>
        <member name="P:IceCoffee.Network.Sockets.KeepAlive.Enable">
            <summary>
            是否启用Keep-Alive
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.KeepAlive.ConnectTimes">
            <summary>
            尝试重连次数，默认3
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.KeepAlive.KeepAliveTime">
            <summary>
            在这个时间间隔内没有数据交互，则发探测包，默认60000  单位: 毫秒
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.KeepAlive.KeepAliveInterval">
            <summary>
            //发探测包时间间隔，默认1000  单位: 毫秒
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.ReceiveBufferSize">
            <summary>
            <para>每次接收数据的缓冲区大小，默认为4096字节/会话</para>
            <para>必须在socket启动前设置。注意此属性与ReadBuffer读取缓冲区是不同的</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.SendBufferSize">
            <summary>
            <para>每次发送数据的缓冲区大小，默认为4096字节/会话</para>
            <para>必须在socket启动前设置。大于此大小的数据包将被作为临时的新缓冲区发送，此过程影响性能</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.LocalIPEndPoint">
            <summary>
            本地IP终结点
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.Session">
            <summary>
            当前会话
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.ConnectionState">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.IsConnected">
            <summary>
            是否已经连接成功
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.ConnectTimedOutSpan">
            <summary>
            连接超时范围, 默认10秒
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.AutoReconnectMaxCount">
            <summary>
            如果在断开连接后不需要重连；请设置此属性小于或等于0
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.AutoReconnectInterval">
            <summary>
            自动重连间隔，默认每20秒重连一次，一般比连接超时范围长
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.AsServer">
            <summary>
            是否作为服务端
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.Connected">
            <summary>
            连接成功，OnConnected 引发 Connected 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.Disconnected">
            <summary>
            失去连接，OnDisconnected 引发 Disconnected 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.ReconnectDefeated">
            <summary>
            自动重连失败
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.ConnectionStateChanged">
            <summary>
            连接状态改变
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.ExceptionCaught">
            <summary>
            异常捕获
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.OnDisconnected(System.Net.Sockets.SocketError)">
            <summary>
            断开连接时调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.OnReconnectDefeated">
            <summary>
            自动重连失败时调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.OnConnectionStateChanged(IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState)">
            <summary>
            连接状态改变时调用
            </summary>
            <param name="connectionState"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.Connect(System.String,System.UInt16)">
            <summary>
            连接服务端
            </summary>
            <param name="ipStr"></param>
            <param name="port"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.Reconnect">
            <summary>
            使用上次尝试连接的参数重新连接
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpClient.BaseClient`1.Disconnect">
            <summary>
            断开连接
            </summary>
        </member>
        <member name="T:IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState">
            <summary>
            连接状态
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState.Disconnected">
            <summary>
            未连接
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState.Disconnecting">
            <summary>
            正在断开
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState.Connecting">
            <summary>
            正在连接
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState.Connected">
            <summary>
            已连接
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.MulitThreadTcpClient.ConnectionState.AutoReconnecting">
            <summary>
            正在自动重连
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpClient.CustomClient`1.HeartbeatInterval">
            <summary>
            心跳包发送周期，单位毫秒，默认60,000毫秒
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Sessions">
            <summary>
            获取所有会话
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.SessionCount">
            <summary>
            连接的会话数量
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.ReceiveBufferSize">
            <summary>
            <para>每次接收数据的缓冲区大小，默认为4096字节/会话</para>
            <para>必须在socket启动前设置。注意此属性与ReadBuffer读取缓冲区是不同的</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.SendBufferSize">
            <summary>
            <para>每次发送数据的缓冲区大小，默认为4096字节/会话</para>
            <para>必须在socket启动前设置。大于此大小的数据包将被作为临时的新缓冲区发送，此过程影响性能</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.LocalIPEndPoint">
            <summary>
            本地IP终结点
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.IsListening">
            <summary>
            服务端是否正在监听
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.AsServer">
            <summary>
            是否作为服务端
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Started">
            <summary>
            开始监听，OnStarted 引发 Started 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Stopped">
            <summary>
            停止监听，OnStopped 引发 Started 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.NewSessionSetup">
            <summary>
            新会话建立，OnNewSessionSetup 引发 Started 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.SessionClosed">
            <summary>
            会话结束，OnSessionClosed 引发 Started 事件。
            </summary>
        </member>
        <member name="E:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.ExceptionCaught">
            <summary>
            异常捕获
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.OnStarted">
            <summary>
            当服务端开始监听后调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.OnStopped">
            <summary>
            当服务端停止监听后调用
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.OnNewSessionSetup(`0)">
            <summary>
            当新会话建立时调用
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.OnSessionClosed(`0,System.Net.Sockets.SocketError)">
            <summary>
            当会话关闭时调用
            </summary>
            <param name="session"></param>
            <param name="closedReason"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Start(System.UInt16)">
            <summary>
            开始监听
            </summary>
            <param name="port">监听端口，端口范围为：0-65535</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Start(System.String,System.UInt16)">
            <summary>
            开始监听
            </summary>
            <param name="ipStr">监听IP地址(字符串形式)，默认为Any</param>
            <param name="port">监听端口，端口范围为：0-65535</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Start(System.Net.IPAddress,System.UInt16)">
            <summary>
            开始监听
            </summary>
            <param name="ipAddress">监听IP地址</param>
            <param name="port">监听端口，端口范围为：0-65535</param>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Restart">
            <summary>
            使用上次开始监听的参数重新开始监听
            </summary>
            <returns>成功返回true,否则返回false</returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.Stop">
            <summary>
            停止监听
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.CloseSession(System.Int32)">
            <summary>
            关闭会话
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.MulitThreadTcpServer.BaseServer`1.SendByID(System.Byte[],System.Int32)">
            <summary>
            对指定sessionID发送数据
            </summary>
            <param name="data">待发送数据</param>
            <param name="sessionID">sessionID</param>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.CustomServer`1.Timeout">
            <summary>
            如果某个会话在此时长内未通讯，则主动断开此会话，单位毫秒，默认12,000毫秒
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.MulitThreadTcpServer.CustomServer`1.HeartbeatCheckInterval">
            <summary>
            心跳包检查周期 单位毫秒，默认180,000毫秒
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISession.SessionID">
            <summary>
            会话ID，Socket的操作系统句柄
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISession.SocketDispatcher">
            <summary>
            套接字调度者
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISession.ConnectTime">
            <summary>
            会话连接时间
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISession.RemoteIPEndPoint">
            <summary>
            远程IP终结点
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.Primitives.ISession.Close">
            <summary>
            关闭会话
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISocketDispatcher.ReceiveBufferSize">
            <summary>
            <para>每次接收数据的缓冲区大小，默认为4096字节/会话</para>
            <para>必须在socket启动前设置。注意此属性与ReadBuffer读取缓冲区是不同的</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISocketDispatcher.SendBufferSize">
            <summary>
            <para>每次发送数据的缓冲区大小，默认为4096字节/会话</para>
            <para>必须在socket启动前设置。大于此大小的数据包将被作为临时的新缓冲区发送，此过程影响性能</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISocketDispatcher.LocalIPEndPoint">
            <summary>
            本地IP终结点
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.Primitives.ISocketDispatcher.AsServer">
            <summary>
            是否作为服务端
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.ReadBufferManager._readOffset">
            <summary>
            当前buffer列表第一个元素（上次被读取到Saea中Buffer数据）的偏移的偏移量）
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.ReadBufferManager._newlineIndex">
            <summary>
            上次搜索到'\n'符的位置
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.ReadBufferManager._session">
            <summary>
            当前会话
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.ReadBufferManager._onInternalReceived">
            <summary>
            内部数据接收委托
            </summary>
        </member>
        <member name="F:IceCoffee.Network.Sockets.ReadBufferManager._collectSaea">
            <summary>
            回收RecvSaea
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.ReadBufferManager.CanReadLine">
            <summary>
            <para>能否从读取缓冲区读取一行数据，通常在ReadLine前调用</para>
            <para>如果换行符 ASCII（'\n'）包含在缓冲区中返回true，否则返回false</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.ReadBufferManager.ReadBufferMaxLength">
            <summary>
            <para>设置或者内部读取缓冲区的最大长度(字节)，读取缓冲区溢出将导致会话关闭,</para>
            <para>缓冲区大小值小于或0意味着读取缓冲区不受限制，并且所有传入数据都被缓冲。默认值为1M。</para>
            <para>如果您只在某些时间点（例如，在实时流应用程序中）读取数据，</para>
            <para>或者如果您希望保护套接字不受太多数据的影响（这些数据最终可能会导致应用程序内存不足），则此选项非常有用。</para>
            <para>内部读取缓冲区的大小必须为 ReceiveBufferSize（每次接收数据的缓冲区大小）的整数倍</para>
            </summary>
        </member>
        <member name="P:IceCoffee.Network.Sockets.ReadBufferManager.BytesAvailable">
            <summary>
            返回缓冲区中等待读取的字节总数
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.Read(System.Int64)">
            <summary>
            从缓冲区读取最多maxSize字节，并返回以字节数组形式读取的数据。
            <para>缓冲区为空、maxSize小于或等于0将返回空的字节数组</para>
            </summary>
            <param name="maxSize"></param>
            <returns></returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.ReadAll">
            <summary>
            <para>从缓冲区读取所有剩余数据，并将其作为字节数组返回。</para>
            <para>此函数无法报告错误；返回空的字节数组可能意味着当前没有可供读取的数据，或者发生错误。</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.ReadLine">
            <summary>
            <para>从缓冲区读取一行，但不超过maxSize个字符，并以字节数组的形式返回结果，</para>
            <para>如果无法从缓冲区读取一整行将返回空的字节数组</para>
            <para>此函数无法报告错误；返回空的字节数组可能意味着当前没有可供读取的数据，或者发生错误。</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.IndexOf(System.Byte)">
            <summary>
             从数组头部开始搜索指定的byte对象，并返回读取缓存中第一个匹配项的索引，索引基于_readOffset偏移。
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.Contains(System.Byte)">
            <summary>
            确定某byte元素是否在读取缓存中，实际使用IndexOf
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.CacheSaea(System.Net.Sockets.SocketAsyncEventArgs)">
            <summary>
            缓存RecvSaea
            </summary>
            <param name="saea"></param>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.CollectAllRecvSaeaAndReset">
            <summary>
            回收所有RecvSaea
            </summary>
        </member>
        <member name="M:IceCoffee.Network.Sockets.ReadBufferManager.ResetField">
            <summary>
            重置字段
            </summary>
        </member>
    </members>
</doc>
